doctype html
html(lang="en")
  head
    meta(charset="utf-8")
    meta(name="viewport", content="width=device-width, initial-scale=1")
    title Vendor Dashboard
    link(rel="stylesheet", href="/css/sales-report.css")

  body
    main.container
      .top-section
        // Cards
        .cards
          .card.combined-card
            .combined-content
              .sales-section
                .amount#totalSales UGX #{stats.totalSales}
                .label Sales
              .vertical-divider
              .orders-section
                .amount#totalOrders #{stats.totalOrders}
                .label Orders
          .card
            .amount#inStock #{stats.inStock}
            .label In stock
          .card
            .amount#outOfStock #{stats.outOfStock}
            .label Out of stock

        // Form
        aside.panel
          .panel-inner
            h3 Add Product

            if success
              .alert.success #{success}
                button(type="button" onclick="this.parentElement.style.display='none'") ×

            if error
              .alert.error #{error}
                button(type="button" onclick="this.parentElement.style.display='none'") ×

            form#productForm(action="/add" method="POST" enctype="multipart/form-data")
              .form-col
                label(for="name") Product Name
                input#name(name="name" type="text" value=formData.name || '' class=validationErrors.name ? 'error-field' : '')
                if validationErrors.name
                  .error-message #{validationErrors.name}

              .form-col
                label(for="category") Category
                input#category(name="category" type="text" value=formData.category || '' class=validationErrors.category ? 'error-field' : '')
                if validationErrors.category
                  .error-message #{validationErrors.category}

              .form-col
                label(for="price") Price
                input#price(name="price" type="number" step="0.01" value=formData.price || '' class=validationErrors.price ? 'error-field' : '')
                if validationErrors.price
                  .error-message #{validationErrors.price}

              .form-col
                label(for="quantity") Quantity
                input#quantity(name="quantity" type="number" value=formData.quantity || '' class=validationErrors.quantity ? 'error-field' : '')
                if validationErrors.quantity
                  .error-message #{validationErrors.quantity}

              .form-row
                .form-col
                  label(for="color") Color
                  input#color(name="color" type="text" value=formData.color || '' class=validationErrors.color ? 'error-field' : '')
                  if validationErrors.color
                    .error-message #{validationErrors.color}
                .form-col
                  label(for="image") Upload Image
                  input#image(name="image" type="file" class=validationErrors.image ? 'error-field' : '')
                  if validationErrors.image
                    .error-message #{validationErrors.image}

              .actions
                button.btn.save(type="submit") SAVE
                button.btn.clear(type="reset") CLEAR

      .table-wrap
        table
          thead
            tr
              th ID
              th NAME
              th CATEGORY
              th PRICE
              th QUANTITY
          tbody
            if products.length
              each product in products
                tr
                  td= product.productId
                  td= product.name
                  td= product.category
                  td= product.price
                  td= product.quantity
            else
              tr
                td(colspan="5") No products found

    // Scripts
    script.
      const closeSuccess = document.getElementById("closeSuccess");
      if (closeSuccess) {
        closeSuccess.onclick = () => closeSuccess.parentElement.style.display = "none";
        setTimeout(() => { closeSuccess.parentElement.style.display = "none"; }, 3000);
      }

      const closeError = document.getElementById("closeError");
      if (closeError) {
        closeError.onclick = () => closeError.parentElement.style.display = "none";
        setTimeout(() => { closeError.parentElement.style.display = "none"; }, 5000);
      }

      document.getElementById('clearBtn')?.addEventListener('click', function() {
        document.getElementById('productForm').reset();
        document.querySelectorAll('.error-message').forEach(msg => msg.style.display = 'none');
        document.querySelectorAll('.error-field').forEach(field => field.classList.remove('error-field'));
      });

    script(src="/js/main.js")

